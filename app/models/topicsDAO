function topicsDAO(conn){
    this.connection = conn;
}

topicsDAO.prototype.topic_subscribe_register_db = function(dados, callback) {
    let query = "INSERT INTO tp_subscribe(device_id, tp_subscribe, qos) VALUES(";
    query += "'"+dados.device_id+"','"+dados.tp_subscribe+"',"+dados.qos+")";
    this.connection.query(query, callback);
};

topicsDAO.prototype.publish_metrics_db = function(dados, callback){
    let query= "INSERT INTO mqtt_metrics(device_id, topic, length, user_id, conn_id, timestamp) VALUES ";
    query += "("+dados.device_id+",'"+dados.topic+"',"+dados.length+","+dados.user_id+",";
    query += dados.conn_id+", NOW())";
    this.connection.query(query, dados, callback);
};

topicsDAO.prototype.message_metric_db = function(dados, callback){
    let query = "select count(*) as quantidade, timestamp as marca from mqtt_metrics where DAY(timestamp) = DAY(CURDATE())";
    query += "and user_id ="+dados.user_id+" group by(hour(timestamp))";
    this.connection.query(query, dados, callback);
};

topicsDAO.prototype.traffic_metric_db = function(dados, callback){

};

topicsDAO.prototype.conn_metrics_db = function(dados, callback){

};

module.exports = function(){
    return topicsDAO;
};