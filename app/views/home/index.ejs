<!-- Navigation -->
<%- include('../header'); %>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.23.0/moment-with-locales.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart.min.js"></script>
<script src="chartjs-plugin-streaming.min.js"></script>
<title>Dashboard</title>
<div class="col-sm-8">
    <h3>Dashboard</h3>
    <hr/>
    <div class="row col-sm-10">
        <div class="form-group row col-sm-4">
            <h4>Stats</h4>
        </div>
        <div class="form-group row">
            <label for="staticEmail" class="col-sm-2 col-form-label">Filtro</label>
            <div class="col-sm-3">
                <select id="filtro" class="form-control form-control-sm" style="width: 150px">
                    <option value="1">Tráfego/Mensagens</option>
                    <option value="3">Conexões</option>
                </select>
            </div>
        </div>
        <div class="form-group row">
            <label for="staticEmail" class="col-sm-3 col-form-label">Período</label>
            <div class="col-sm-3">
                <select id="periodo" class="form-control form-control-sm" style="width: 150px">
                    <option value="1">Hora</option>
                    <option value="2">Minuto</option>
                </select>
            </div>

        </div>
        <hr/>

        <canvas id="canvas">

        </canvas>
    </div>
    <div class="row col-sm-5" style="margin-top: 40px">
        <h4>Clientes</h4>
        <hr/>
        <table class="table table-sm">
            <thead>
            <tr>
                <th scope="col">Id do Cliente</th>
                <th scope="col">IP</th>
                <th scope="col"></th>
            </tr>
            </thead>
            <tbody>
            <%
            if(typeof(dados) != 'undefined'){
                for (var i = 0; i < dados.length; i++) {
            %>
            <tr>
                <td><%= dados[i].client_id %></td>
                <td><%= dados[i].client_address %></td>
                <td><a href="/device/data?device_id"><input type="button" class="btn btn-primary btn-sm" value="Ver dados" /></a></td>
            </tr>
            <%
                }
            }
            %>
            </tbody>
        </table>
    </div>
    <div class="row col-sm-2">

    </div>
</div>
<div class="d-none d-xl-block col-xl-2 bd-toc">

</div>

<script>
    let ctx = document.getElementById("canvas").getContext('2d');
    let dados = [];
    let data_label = [];
    let colors = [];
    let datasets_ = [];
    let timer;
    let chart = new Chart(ctx, {
        type: 'line',
        data: {
            datasets: datasets_
        },
        options: {
            responsive:true,
            legend: {
                position: 'top',
            },
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero:true
                    }
                }],
                xAxes: [{
                    gridLines: {
                        offsetGridLines: true
                    }
                }]
            }
        }
    });

    function carrega_dados_grafico() {

        clearInterval(timer);
        let periodo_ = periodo.value;
        let filtro_ = filtro.value;
        let xhttp = new XMLHttpRequest();

        xhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                let resposta;
                removeData(chart);
                try {
                    resposta = JSON.parse(this.responseText);
                }catch (e) {
                    console.log(e)
                }

                atualiza_dados_grafico(resposta);
            }
        };

        xhttp.open("GET", "/server/metrics?periodo="+periodo_+"&filtro="+filtro_, true);
        xhttp.send();
    }

    function dynamicColors() {
        var r = Math.floor(Math.random() * 255);
        var g = Math.floor(Math.random() * 255);
        var b = Math.floor(Math.random() * 255);
        return "rgb(" + r + "," + g + "," + b + ")";
    }

    function removeData(chart) {
        chart.data.labels.pop();
        chart.data.datasets.forEach((dataset) => {
            dataset.data.pop();
        });
        chart.update();
    }

    function atualiza_dados_grafico(resposta){
        dados.length = 0;
        data_label.length = 0;

        for(let i = 0; i < resposta.length; i++){
            dados[i] = [];
            data_label[i] = [];
            for(let j = 0; j < resposta[i].length; j++){
                dados[i].push(resposta[i][j].quantidade);
                data_label[i].push(resposta[i][j].marca);
            }

            datasets_[i] = {};
            if(i === 0){
                datasets_[i].label = "Mensagens";
            }else{
                datasets_[i].label = "Tráfego";
            }

            datasets_[i].data = dados[i];
            datasets_[i].backgroundColor = colors[i];
            datasets_[i].borderColor = colors[i];
            datasets_[i].hoverBorderColor = 'rgba(200, 200, 200, 1)';
            datasets_[i].fill = false

        }

        chart.data.labels = data_label[0];
        //addData(chart, data_label, dados);
        chart.update();
        timer = setTimeout(carrega_dados_grafico, 60000);
    }

    colors.push(dynamicColors());
    colors.push(dynamicColors());
    carrega_dados_grafico();

    periodo.addEventListener('change',function(){
        carrega_dados_grafico();
    })

</script>

</div>

<%- include('../footer'); %>
